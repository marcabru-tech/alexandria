[
  {
    "nome": "Haskell",
    "paradigmas": ["funcional", "declarativo"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".hs",
    "bibliotecas_principais": ["lens", "aeson", "conduit"],
    "ides_principais": ["Visual Studio Code", "IntelliJ IDEA (plugin)", "Emacs", "Vim"],
    "curva_de_aprendizagem": "Íngreme para iniciantes devido ao paradigma funcional puro e sintaxe diferente.",
    "familia_sintatica": "ML/Haskell",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "University of Glasgow",
    "ano_criacao": 1990,
    "criador": "Simon Peyton Jones et al.",
    "proposito": "Pesquisa acadêmica, ensino e aplicações funcionais puras.",
    "status": "ativa",
    "exemplo_hello_world": "main = putStrLn \"Hello, World!\"",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Necessária ponte via FFI ou geração de bindings."
    }
  },
  {
    "nome": "Odin",
    "paradigmas": ["imperativa", "procedural"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".odin",
    "bibliotecas_principais": ["core", "raylib"],
    "ides_principais": ["VS Code", "Sublime Text"],
    "curva_de_aprendizagem": "Moderada; sintaxe simples, mas pouca documentação e comunidade pequena.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Manual, com abstrações para alocação customizada",
    "empresa_desenvolvedora": "Independente (Ginger Bill)",
    "ano_criacao": 2016,
    "criador": "Ginger Bill",
    "proposito": "Substituição moderna ao C, focada em performance e simplicidade.",
    "status": "ativa",
    "exemplo_hello_world": "package main\n\nimport \"core:fmt\"\n\nmain :: proc() {\n    fmt.println(\"Hello, World!\")\n}",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Interoperabilidade potencial via C FFI."
    }
  },
  {
    "nome": "Carbon",
    "paradigmas": ["imperativa", "orientada a objetos"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".carbon",
    "bibliotecas_principais": ["experimental"],
    "ides_principais": ["VS Code (experimental)"],
    "curva_de_aprendizagem": "Indefinida; linguagem ainda experimental.",
    "familia_sintatica": "C++-like",
    "gerenciamento_memoria": "Previsto manual e automático (em construção)",
    "empresa_desenvolvedora": "Google",
    "ano_criacao": 2022,
    "criador": "Chandler Carruth (Google)",
    "proposito": "Evolução do C++ para aplicações modernas.",
    "status": "experimental",
    "exemplo_hello_world": "package Sample api;\n\nfn Main() -> i32 {\n  Println(\"Hello, World!\");\n  return 0;\n}",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Linguagem experimental, interoperabilidade em construção."
    }
  },
  {
    "nome": "Zig",
    "paradigmas": ["imperativa", "procedural"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".zig",
    "bibliotecas_principais": ["std", "zigimg"],
    "ides_principais": ["VS Code", "CLion"],
    "curva_de_aprendizagem": "Moderada; sintaxe clara, mas exige atenção ao gerenciamento de memória.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Manual, controle explícito",
    "empresa_desenvolvedora": "Independente (Andrew Kelley)",
    "ano_criacao": 2015,
    "criador": "Andrew Kelley",
    "proposito": "Substituição moderna ao C, foco em sistemas e segurança.",
    "status": "ativa",
    "exemplo_hello_world": "const std = @import(\"std\");\n\npub fn main() void {\n    std.debug.print(\"Hello, World!\\n\", .{});\n}",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["C ABI"],
      "observacoes": "Forte interoperabilidade via C ABI."
    }
  },
  {
    "nome": "Lua",
    "paradigmas": ["imperativa", "procedural", "orientada a objetos (via metatabelas)", "funcional"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada",
    "extensao_padrao": ".lua",
    "bibliotecas_principais": ["luasocket", "lpeg", "luafilesystem"],
    "ides_principais": ["ZeroBrane Studio", "VS Code"],
    "curva_de_aprendizagem": "Fácil; sintaxe simples e intuitiva.",
    "familia_sintatica": "Pascal-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "PUC-Rio",
    "ano_criacao": 1993,
    "criador": "Roberto Ierusalimschy, Luiz Henrique de Figueiredo, Waldemar Celes",
    "proposito": "Embarcável em aplicações, scripts de jogos, automação.",
    "status": "ativa",
    "exemplo_hello_world": "print('Hello, World!')",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["embedding", "FFI"],
      "observacoes": "Facilmente embarcável em outras linguagens."
    }
  },
  {
    "nome": "Bend",
    "paradigmas": ["imperativa", "orientada a objetos"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".bend",
    "bibliotecas_principais": ["std"],
    "ides_principais": ["VS Code (experimental)"],
    "curva_de_aprendizagem": "Indefinida; linguagem nova e experimental.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Manual (em desenvolvimento)",
    "empresa_desenvolvedora": "Independente",
    "ano_criacao": 2021,
    "criador": "Benjamin Sutherland",
    "proposito": "Desenvolvimento de aplicações modernas com foco em performance.",
    "status": "experimental",
    "exemplo_hello_world": "// Exemplo hipotético\nmain() {\n    print(\"Hello, World!\")\n}",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Linguagem nova, interoperabilidade limitada."
    }
  },
  {
    "nome": "C",
    "paradigmas": ["imperativa", "procedural"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".c",
    "bibliotecas_principais": ["glibc", "OpenSSL", "libcurl"],
    "ides_principais": ["Code::Blocks", "CLion", "DevC++", "VS Code"],
    "curva_de_aprendizagem": "Moderada a difícil; sintaxe simples, mas exige compreensão de baixo nível e gerenciamento manual de memória.",
    "familia_sintatica": "Algol/C",
    "gerenciamento_memoria": "Manual (malloc/free)",
    "empresa_desenvolvedora": "Bell Labs",
    "ano_criacao": 1972,
    "criador": "Dennis Ritchie",
    "proposito": "Desenvolvimento de sistemas operacionais e software de baixo nível.",
    "status": "ativa",
    "exemplo_hello_world": "#include <stdio.h>\nint main() {\n    printf(\"Hello, World!\\n\");\n    return 0;\n}",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["FFI", "API nativa"],
      "observacoes": "Base para interoperabilidade de muitas linguagens."
    }
  },
  {
    "nome": "C++",
    "paradigmas": ["imperativa", "orientada a objetos", "genérica"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".cpp",
    "bibliotecas_principais": ["STL", "Boost", "Qt"],
    "ides_principais": ["CLion", "Visual Studio", "Qt Creator", "VS Code"],
    "curva_de_aprendizagem": "Difícil; linguagem poderosa, porém complexa e multifacetada.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Manual (new/delete) e smart pointers",
    "empresa_desenvolvedora": "Bell Labs",
    "ano_criacao": 1983,
    "criador": "Bjarne Stroustrup",
    "proposito": "Desenvolvimento de sistemas, aplicações de alto desempenho e jogos.",
    "status": "ativa",
    "exemplo_hello_world": "#include <iostream>\nint main() {\n    std::cout << \"Hello, World!\" << std::endl;\n    return 0;\n}",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["FFI", "API nativa"],
      "observacoes": "Interoperabilidade via C ABI e bindings específicos."
    }
  },
  {
    "nome": "C#",
    "paradigmas": ["imperativa", "orientada a objetos", "funcional"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada (CLR)",
    "extensao_padrao": ".cs",
    "bibliotecas_principais": [".NET", "Entity Framework", "Xamarin"],
    "ides_principais": ["Visual Studio", "Rider", "VS Code"],
    "curva_de_aprendizagem": "Fácil a moderada; sintaxe amigável, documentação e ferramentas excelentes.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Microsoft",
    "ano_criacao": 2000,
    "criador": "Anders Hejlsberg",
    "proposito": "Desenvolvimento de aplicações desktop, web e mobile no ecossistema .NET.",
    "status": "ativa",
    "exemplo_hello_world": "using System;\nclass Program {\n    static void Main() {\n        Console.WriteLine(\"Hello, World!\");\n    }\n}",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": ["P/Invoke"],
      "observacoes": "Interop via P/Invoke e .NET."
    }
  },
  {
    "nome": "Java",
    "paradigmas": ["imperativa", "orientada a objetos"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada (JVM)",
    "extensao_padrao": ".java",
    "bibliotecas_principais": ["Spring", "Hibernate", "JUnit"],
    "ides_principais": ["IntelliJ IDEA", "Eclipse", "NetBeans", "VS Code"],
    "curva_de_aprendizagem": "Moderada; sintaxe clara, mas exige entendimento de orientação a objetos.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Sun Microsystems",
    "ano_criacao": 1995,
    "criador": "James Gosling",
    "proposito": "Aplicações empresariais, web e mobile multiplataforma.",
    "status": "ativa",
    "exemplo_hello_world": "public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": ["JNI"],
      "observacoes": "Interop via JNI."
    }
  },
  {
    "nome": "JavaScript",
    "paradigmas": ["imperativa", "orientada a objetos", "funcional"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada",
    "extensao_padrao": ".js",
    "bibliotecas_principais": ["React", "Vue", "Express"],
    "ides_principais": ["VS Code", "WebStorm", "Sublime Text"],
    "curva_de_aprendizagem": "Fácil para iniciantes, moderada em aplicações avançadas.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Netscape",
    "ano_criacao": 1995,
    "criador": "Brendan Eich",
    "proposito": "Desenvolvimento web (frontend e backend), aplicações interativas.",
    "status": "ativa",
    "exemplo_hello_world": "console.log('Hello, World!');",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["WebAssembly", "APIs"],
      "observacoes": "Interop via WebAssembly e APIs JS."
    }
  },
  {
    "nome": "Python",
    "paradigmas": ["imperativa", "orientada a objetos", "funcional"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada",
    "extensao_padrao": ".py",
    "bibliotecas_principais": ["numpy", "pandas", "requests"],
    "ides_principais": ["PyCharm", "VS Code", "Jupyter", "Spyder"],
    "curva_de_aprendizagem": "Fácil; sintaxe intuitiva e amigável.",
    "familia_sintatica": "Pythonic (própria, inspirada em ABC/C)",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Python Software Foundation",
    "ano_criacao": 1991,
    "criador": "Guido van Rossum",
    "proposito": "Desenvolvimento geral, ciência de dados, automação, web.",
    "status": "ativa",
    "exemplo_hello_world": "print('Hello, World!')",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["C API", "ctypes", "CFFI"],
      "observacoes": "Interop fácil via bindings em C."
    }
  },
  {
    "nome": "Pascal",
    "paradigmas": ["imperativa", "procedural"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".pas",
    "bibliotecas_principais": ["RTL", "FreeVision"],
    "ides_principais": ["Lazarus", "Delphi"],
    "curva_de_aprendizagem": "Fácil; sintaxe estruturada e didática.",
    "familia_sintatica": "Algol/Pascal",
    "gerenciamento_memoria": "Manual (new/dispose), algumas versões com gerenciamento automático",
    "empresa_desenvolvedora": "ETH Zurich",
    "ano_criacao": 1970,
    "criador": "Niklaus Wirth",
    "proposito": "Ensino, aplicações administrativas, desenvolvimento rápido.",
    "status": "ativa",
    "exemplo_hello_world": "program HelloWorld;\nbegin\n  writeln('Hello, World!');\nend.",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Interop limitada, possível via C intermediário."
    }
  },
  {
    "nome": "COBOL",
    "paradigmas": ["procedural"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".cob",
    "bibliotecas_principais": ["OpenCOBOL", "GnuCOBOL"],
    "ides_principais": ["Visual COBOL", "OpenCobolIDE"],
    "curva_de_aprendizagem": "Moderada; sintaxe descritiva e extensa.",
    "familia_sintatica": "COBOL",
    "gerenciamento_memoria": "Automático na maioria das implementações",
    "empresa_desenvolvedora": "CODASYL/IBM",
    "ano_criacao": 1959,
    "criador": "Grace Hopper et al.",
    "proposito": "Automação comercial, bancos, governo.",
    "status": "ativa",
    "exemplo_hello_world": "IDENTIFICATION DIVISION.\nPROGRAM-ID. HelloWorld.\nPROCEDURE DIVISION.\n    DISPLAY 'Hello, World!'.\n    STOP RUN.",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Pouca interoperabilidade direta; possível via arquivos e C."
    }
  },
  {
    "nome": "Rust",
    "paradigmas": ["imperativa", "funcional", "concorrente"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".rs",
    "bibliotecas_principais": ["tokio", "serde", "actix"],
    "ides_principais": ["VS Code", "IntelliJ Rust", "CLion"],
    "curva_de_aprendizagem": "Íngreme; conceitos avançados de ownership e borrowing.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Gerenciamento de memória seguro e sem coletor de lixo (ownership/borrowing)",
    "empresa_desenvolvedora": "Mozilla",
    "ano_criacao": 2010,
    "criador": "Graydon Hoare",
    "proposito": "Desenvolvimento de sistemas seguros e de alta performance.",
    "status": "ativa",
    "exemplo_hello_world": "fn main() {\n    println!(\"Hello, World!\");\n}",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["C ABI", "FFI"],
      "observacoes": "Interop robusta via FFI."
    }
  },
  {
    "nome": "Ruby",
    "paradigmas": ["imperativa", "orientada a objetos", "funcional"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada",
    "extensao_padrao": ".rb",
    "bibliotecas_principais": ["rails", "sinatra"],
    "ides_principais": ["RubyMine", "VS Code", "Aptana Studio"],
    "curva_de_aprendizagem": "Fácil; sintaxe expressiva e próxima da linguagem humana.",
    "familia_sintatica": "Perl-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Independente (Yukihiro Matsumoto)",
    "ano_criacao": 1995,
    "criador": "Yukihiro Matsumoto",
    "proposito": "Desenvolvimento web, scripts e automação.",
    "status": "ativa",
    "exemplo_hello_world": "puts 'Hello, World!'",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": ["C extension"],
      "observacoes": "Interop via extensões em C."
    }
  },
  {
    "nome": "Go",
    "paradigmas": ["imperativa", "concorrente"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".go",
    "bibliotecas_principais": ["gin", "beego", "grpc"],
    "ides_principais": ["GoLand", "VS Code", "LiteIDE"],
    "curva_de_aprendizagem": "Fácil; sintaxe limpa e ferramentas integradas.",
    "familia_sintatica": "C-like",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Google",
    "ano_criacao": 2009,
    "criador": "Robert Griesemer, Rob Pike, Ken Thompson",
    "proposito": "Sistemas, servidores, microsserviços, cloud.",
    "status": "ativa",
    "exemplo_hello_world": "package main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}",
    "interop_gurudev": {
      "possui_bridge": true,
      "modos_interop": ["Cgo", "FFI"],
      "observacoes": "Interop robusta via Cgo."
    }
  },
  {
    "nome": "Perl",
    "paradigmas": ["imperativa", "orientada a objetos", "funcional"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada",
    "extensao_padrao": ".pl",
    "bibliotecas_principais": ["Moose", "DBI", "Mojolicious"],
    "ides_principais": ["Padre", "Komodo IDE", "VS Code"],
    "curva_de_aprendizagem": "Moderada; sintaxe flexível mas pode ser confusa para iniciantes.",
    "familia_sintatica": "Perl",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Independente (Larry Wall)",
    "ano_criacao": 1987,
    "criador": "Larry Wall",
    "proposito": "Processamento de texto, automação de scripts, web.",
    "status": "ativa",
    "exemplo_hello_world": "print \"Hello, World!\\n\";",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": ["XS", "Inline::C"],
      "observacoes": "Interop via módulos C e bindings, integração possível com arquivos e chamadas externas."
    }
  },
  {
    "nome": "Fortran",
    "paradigmas": ["imperativa", "procedural", "orientada a objetos (modernas)"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada",
    "extensao_padrao": ".f90",
    "bibliotecas_principais": ["LAPACK", "BLAS"],
    "ides_principais": ["Photran", "VS Code", "Intel Fortran"],
    "curva_de_aprendizagem": "Moderada; sintaxe antiga, mas lógica simples.",
    "familia_sintatica": "Fortran",
    "gerenciamento_memoria": "Manual",
    "empresa_desenvolvedora": "IBM",
    "ano_criacao": 1957,
    "criador": "John Backus",
    "proposito": "Cálculo científico e engenharia numérica.",
    "status": "ativa",
    "exemplo_hello_world": "program hello\n  print *, 'Hello, World!'\nend program hello",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Interop possível via C intermediário."
    }
  },
  {
    "nome": "Common Lisp",
    "paradigmas": ["funcional", "imperativa", "orientada a objetos"],
    "tipagem": "dinâmica",
    "compilada_ou_interpretada": "interpretada/compilada",
    "extensao_padrao": ".lisp",
    "bibliotecas_principais": ["Quicklisp", "SBCL", "CLX"],
    "ides_principais": ["SLIME (Emacs)", "LispWorks", "VS Code"],
    "curva_de_aprendizagem": "Íngreme; sintaxe distinta (prefix, S-expressions).",
    "familia_sintatica": "Lisp",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "MIT",
    "ano_criacao": 1958,
    "criador": "John McCarthy",
    "proposito": "Pesquisa em IA, ensino, prototipagem rápida.",
    "status": "ativa",
    "exemplo_hello_world": "(print \"Hello, World!\")",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Interop via C possível, mas rara."
    }
  },
  {
    "nome": "Assembly x86",
    "paradigmas": ["imperativa", "procedural"],
    "tipagem": "não tipada",
    "compilada_ou_interpretada": "montada",
    "extensao_padrao": ".asm",
    "bibliotecas_principais": ["NASM", "MASM"],
    "ides_principais": ["NASM IDE", "Masm32", "VS Code"],
    "curva_de_aprendizagem": "Muito íngreme; exige conhecimento profundo de hardware.",
    "familia_sintatica": "Assembly",
    "gerenciamento_memoria": "Manual",
    "empresa_desenvolvedora": "Diversos fabricantes de CPU",
    "ano_criacao": 1949,
    "criador": "Kathleen Booth (primeiro assembler)",
    "proposito": "Programação de baixo nível, drivers, sistemas embarcados.",
    "status": "ativa",
    "exemplo_hello_world": "; Hello World em NASM x86 (Linux)\nsection .data\n    msg db 'Hello, World!',0Ah\nsection .text\nglobal _start\n_start:\n    mov edx,13\n    mov ecx,msg\n    mov ebx,1\n    mov eax,4\n    int 0x80\n    mov eax,1\n    int 0x80",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [],
      "observacoes": "Interop via ligação direta binária (pouco prático)."
    }
  },
  {
    "nome": "F#",
    "paradigmas": ["funcional", "imperativa", "orientada a objetos"],
    "tipagem": "estática",
    "compilada_ou_interpretada": "compilada (CLR/.NET)",
    "extensao_padrao": ".fs",
    "bibliotecas_principais": ["FSharp.Core", "Math.NET Numerics", "Suave"],
    "ides_principais": ["Visual Studio", "Rider", "VS Code"],
    "curva_de_aprendizagem": "Moderada; sintaxe funcional moderna e integração com .NET.",
    "familia_sintatica": "ML/Caml",
    "gerenciamento_memoria": "Coletor de lixo automático",
    "empresa_desenvolvedora": "Microsoft Research",
    "ano_criacao": 2005,
    "criador": "Don Syme",
    "proposito": "Desenvolvimento funcional em .NET, processamento de dados, ciência e aplicações financeiras.",
    "status": "ativa",
    "exemplo_hello_world": "printfn \"Hello, World!\"",
    "interop_gurudev": {
      "possui_bridge": false,
      "modos_interop": [".NET interop"],
      "observacoes": "Interop possível via .NET, FFI com C também disponível."
    }
  }
]
